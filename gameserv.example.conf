/*
 * Example configuration file for GameServ.
 */

/*
 * First, create the service.
 */
service
{
	/*
	 * The name of the GameServ client.
	 * If you change this value, you probably want to change the client directive in the configuration for the GameServ module too.
	 */
	nick = "GameServ"

	/*
	 * The username of the GameServ client.
	 */
	user = "services"

	/*
	 * The hostname of the GameServ client.
	 */
	host = "services.host"

	/*
	 * The realname of the GameServ client.
	 */
	gecos = "Game Service"

	/*
	 * The modes this client should use.
	 * Do not modify this unless you know what you are doing.
	 *
	 * These modes are very IRCd specific. If left commented, sane defaults
	 * are used based on what protocol module you have loaded.
	 *
	 * Note that setting this option incorrectly could potentially BREAK some, if
	 * not all, usefulness of the client. We will not support you if this client is
	 * unable to do certain things if this option is enabled.
	 */
	#modes = "+o"

	/*
	 * An optional comma separated list of channels this service should join. Outside
	 * of log channels this is not very useful, as the service will just idle in the
	 * specified channels, and will not accept any types of commands.
	 *
	 * Prefixes may be given to the channels in the form of mode characters or prefix symbols.
	 */
	#channels = "@#services,#mychan"
}

/*
 * Core GameServ module.
 *
 * Provides essential functionality for GameServ.
 */
module
{
	name = "gameserv"

	/*
	 * The name of the client that should be GameServ.
	 */
	client = "GameServ"
}

/* Give it a help command. */
command { service = "GameServ"; name = "HELP"; command = "generic/help"; }

/*
 * gs_eightball
 *
 * Provides the command gameserv/eightball
 *
 * Used to ask the 8-ball a question
 */
#module { name = "gs_eightball"; }
#command { name = "EIGHTBALL"; service = "GameServ"; command = "gameserv/eightball"; hide = true; }
#command { name = "8BALL"; service = "GameServ"; command = "gameserv/eightball"; }
#fantasy { name = "EIGHTBALL"; command = "gameserv/eightball"; prepend_channel = true; hide = true; }
#fantasy { name = "8BALL"; command = "gameserv/eightball"; prepend_channel = true; }

/*
 * gs_namegen
 *
 * Provides the command gameserv/namegen
 *
 * Used to generate random name(s)
 */
#module { name = "gs_namegen"; }
#command { name = "NAMEGEN"; service = "GameServ"; command = "gameserv/namegen"; }
#fantasy { name = "NAMEGEN"; command = "gameserv/namegen"; prepend_channel = true; }

/*
 * gs_roulette
 *
 * Provides the command gameserv/roulette
 *
 * Used to perform a round of roulette (live or die)
 */
#module { name = "gs_roulette"; }
#command { name = "ROULETTE"; service = "GameServ"; command = "gameserv/roulette"; }
#fantasy { name = "ROULETTE"; command = "gameserv/roulette"; prepend_channel = true; }

/*
 * gs_sexdice
 *
 * Provides the command gameserv/sexdice
 *
 * Used to roll the sex dice
 */
#module { name = "gs_sexdice"; showroller = false; }
#command { name = "SEXDICE"; service = "GameServ"; command = "gameserv/sexdice"; }
#fantasy { name = "SEXDICE"; command = "gameserv/sexdice"; prepend_channel = true; }
